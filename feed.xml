<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://nissan.github.io/learn-deeplearning-blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://nissan.github.io/learn-deeplearning-blog/" rel="alternate" type="text/html" /><updated>2020-04-06T07:55:42-05:00</updated><id>https://nissan.github.io/learn-deeplearning-blog/feed.xml</id><title type="html">Redditechâ€™s Learn Deep Learning Blog</title><subtitle>My blog as I learn more about deep learning.</subtitle><entry><title type="html">Testing out Javascript inside a notebook</title><link href="https://nissan.github.io/learn-deeplearning-blog/jupyter/javascript/experiments/2020/04/01/Testing-out-Javascript-inside-a-notebook.html" rel="alternate" type="text/html" title="Testing out Javascript inside a notebook" /><published>2020-04-01T00:00:00-05:00</published><updated>2020-04-01T00:00:00-05:00</updated><id>https://nissan.github.io/learn-deeplearning-blog/jupyter/javascript/experiments/2020/04/01/Testing-out-Javascript-inside-a-notebook</id><content type="html" xml:base="https://nissan.github.io/learn-deeplearning-blog/jupyter/javascript/experiments/2020/04/01/Testing-out-Javascript-inside-a-notebook.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-04-01-Testing-out-Javascript-inside-a-notebook.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;First-attempt---Using-Pixiedust-and-Pixiedust_node&quot;&gt;First attempt - Using Pixiedust and Pixiedust_node&lt;a class=&quot;anchor-link&quot; href=&quot;#First-attempt---Using-Pixiedust-and-Pixiedust_node&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;First we're going to borrow from &lt;a href=&quot;https://github.com/IBM/nodejs-in-notebooks/blob/master/notebooks/nodebook_1.ipynb&quot;&gt;a notebook IBM published&lt;/a&gt; on getting this approach up and running&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# install or upgrade the packages&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# restart the kernel to pick up the latest version&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;pip install pixiedust --upgrade
&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;pip install pixiedust_node --upgrade
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Requirement already up-to-date: pixiedust in c:\tools\anaconda3\envs\fastai2\lib\site-packages (1.1.18)
Requirement already satisfied, skipping upgrade: colour in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust) (0.1.5)
Requirement already satisfied, skipping upgrade: requests in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust) (2.23.0)
Requirement already satisfied, skipping upgrade: geojson in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust) (2.5.0)
Requirement already satisfied, skipping upgrade: markdown in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust) (3.2.1)
Requirement already satisfied, skipping upgrade: mpld3 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust) (0.3)
Requirement already satisfied, skipping upgrade: lxml in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust) (4.5.0)
Requirement already satisfied, skipping upgrade: astunparse in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust) (1.6.3)
Requirement already satisfied, skipping upgrade: idna&amp;lt;3,&amp;gt;=2.5 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from requests-&amp;gt;pixiedust) (2.9)
Requirement already satisfied, skipping upgrade: chardet&amp;lt;4,&amp;gt;=3.0.2 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from requests-&amp;gt;pixiedust) (3.0.4)
Requirement already satisfied, skipping upgrade: urllib3!=1.25.0,!=1.25.1,&amp;lt;1.26,&amp;gt;=1.21.1 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from requests-&amp;gt;pixiedust) (1.25.8)
Requirement already satisfied, skipping upgrade: certifi&amp;gt;=2017.4.17 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from requests-&amp;gt;pixiedust) (2019.11.28)
Requirement already satisfied, skipping upgrade: setuptools&amp;gt;=36 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from markdown-&amp;gt;pixiedust) (46.1.1.post20200323)
Requirement already satisfied, skipping upgrade: six&amp;lt;2.0,&amp;gt;=1.6.1 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from astunparse-&amp;gt;pixiedust) (1.14.0)
Requirement already satisfied, skipping upgrade: wheel&amp;lt;1.0,&amp;gt;=0.23.0 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from astunparse-&amp;gt;pixiedust) (0.34.2)
Requirement already up-to-date: pixiedust_node in c:\tools\anaconda3\envs\fastai2\lib\site-packages (0.2.5)
Requirement already satisfied, skipping upgrade: pixiedust in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust_node) (1.1.18)
Requirement already satisfied, skipping upgrade: pandas in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust_node) (1.0.3)
Requirement already satisfied, skipping upgrade: ipython in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust_node) (7.13.0)
Requirement already satisfied, skipping upgrade: lxml in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust-&amp;gt;pixiedust_node) (4.5.0)
Requirement already satisfied, skipping upgrade: colour in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust-&amp;gt;pixiedust_node) (0.1.5)
Requirement already satisfied, skipping upgrade: geojson in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust-&amp;gt;pixiedust_node) (2.5.0)
Requirement already satisfied, skipping upgrade: astunparse in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust-&amp;gt;pixiedust_node) (1.6.3)
Requirement already satisfied, skipping upgrade: markdown in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust-&amp;gt;pixiedust_node) (3.2.1)
Requirement already satisfied, skipping upgrade: mpld3 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust-&amp;gt;pixiedust_node) (0.3)
Requirement already satisfied, skipping upgrade: requests in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pixiedust-&amp;gt;pixiedust_node) (2.23.0)
Requirement already satisfied, skipping upgrade: pytz&amp;gt;=2017.2 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pandas-&amp;gt;pixiedust_node) (2019.3)
Requirement already satisfied, skipping upgrade: numpy&amp;gt;=1.13.3 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pandas-&amp;gt;pixiedust_node) (1.18.1)
Requirement already satisfied, skipping upgrade: python-dateutil&amp;gt;=2.6.1 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pandas-&amp;gt;pixiedust_node) (2.8.1)
Requirement already satisfied, skipping upgrade: pickleshare in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from ipython-&amp;gt;pixiedust_node) (0.7.5)
Requirement already satisfied, skipping upgrade: decorator in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from ipython-&amp;gt;pixiedust_node) (4.4.2)
Requirement already satisfied, skipping upgrade: prompt-toolkit!=3.0.0,!=3.0.1,&amp;lt;3.1.0,&amp;gt;=2.0.0 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from ipython-&amp;gt;pixiedust_node) (3.0.4)
Requirement already satisfied, skipping upgrade: pygments in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from ipython-&amp;gt;pixiedust_node) (2.6.1)
Requirement already satisfied, skipping upgrade: backcall in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from ipython-&amp;gt;pixiedust_node) (0.1.0)
Requirement already satisfied, skipping upgrade: colorama; sys_platform == &amp;#34;win32&amp;#34; in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from ipython-&amp;gt;pixiedust_node) (0.4.3)
Requirement already satisfied, skipping upgrade: setuptools&amp;gt;=18.5 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from ipython-&amp;gt;pixiedust_node) (46.1.1.post20200323)
Requirement already satisfied, skipping upgrade: jedi&amp;gt;=0.10 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from ipython-&amp;gt;pixiedust_node) (0.16.0)
Requirement already satisfied, skipping upgrade: traitlets&amp;gt;=4.2 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from ipython-&amp;gt;pixiedust_node) (4.3.3)
Requirement already satisfied, skipping upgrade: wheel&amp;lt;1.0,&amp;gt;=0.23.0 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from astunparse-&amp;gt;pixiedust-&amp;gt;pixiedust_node) (0.34.2)
Requirement already satisfied, skipping upgrade: six&amp;lt;2.0,&amp;gt;=1.6.1 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from astunparse-&amp;gt;pixiedust-&amp;gt;pixiedust_node) (1.14.0)
Requirement already satisfied, skipping upgrade: idna&amp;lt;3,&amp;gt;=2.5 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from requests-&amp;gt;pixiedust-&amp;gt;pixiedust_node) (2.9)
Requirement already satisfied, skipping upgrade: chardet&amp;lt;4,&amp;gt;=3.0.2 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from requests-&amp;gt;pixiedust-&amp;gt;pixiedust_node) (3.0.4)
Requirement already satisfied, skipping upgrade: urllib3!=1.25.0,!=1.25.1,&amp;lt;1.26,&amp;gt;=1.21.1 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from requests-&amp;gt;pixiedust-&amp;gt;pixiedust_node) (1.25.8)
Requirement already satisfied, skipping upgrade: certifi&amp;gt;=2017.4.17 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from requests-&amp;gt;pixiedust-&amp;gt;pixiedust_node) (2019.11.28)
Requirement already satisfied, skipping upgrade: wcwidth in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from prompt-toolkit!=3.0.0,!=3.0.1,&amp;lt;3.1.0,&amp;gt;=2.0.0-&amp;gt;ipython-&amp;gt;pixiedust_node) (0.1.8)
Requirement already satisfied, skipping upgrade: parso&amp;gt;=0.5.2 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from jedi&amp;gt;=0.10-&amp;gt;ipython-&amp;gt;pixiedust_node) (0.6.2)
Requirement already satisfied, skipping upgrade: ipython-genutils in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from traitlets&amp;gt;=4.2-&amp;gt;ipython-&amp;gt;pixiedust_node) (0.2.0)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Now let's try activating what we just installed and running some javascript code thru Node. I already have Node installed on my local machine, but if you need it, &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;install Node from here&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pixiedust_node&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Pixiedust database opened successfully
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_html rendered_html output_subarea &quot;&gt;

        &lt;div style=&quot;margin:10px&quot;&gt;
            &lt;a href=&quot;https://github.com/ibm-watson-data-lab/pixiedust&quot; target=&quot;_new&quot;&gt;
                &lt;img src=&quot;https://github.com/ibm-watson-data-lab/pixiedust/raw/master/docs/_static/pd_icon32.png&quot; style=&quot;float:left;margin-right:10px&quot; /&gt;
            &lt;/a&gt;
            &lt;span&gt;Pixiedust version 1.1.18&lt;/span&gt;
        &lt;/div&gt;
        
&lt;/div&gt;

&lt;/div&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_html rendered_html output_subarea &quot;&gt;

            &lt;div style=&quot;margin:10px&quot;&gt; 
            &lt;a href=&quot;https://github.com/ibm-cds-labs/pixiedust_node&quot; target=&quot;_new&quot;&gt; 
            &lt;img src=&quot;https://github.com/ibm-cds-labs/pixiedust_node/raw/master/docs/_images/pdn_icon32.png&quot; style=&quot;float:left;margin-right:10px&quot; /&gt; 
            &lt;/a&gt; 
            &lt;span&gt;Pixiedust Node.js&lt;/span&gt; 
            &lt;/div&gt; 

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;node&lt;/span&gt;
print(new Date());
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;pixiedust_node 0.2.5 started. Cells starting &amp;#39;%%node&amp;#39; may contain Node.js code.
&amp;#34;2020-03-31T11:29:22.434Z&amp;#34;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Wow that's pretty cool. I will have to read up a little more into the T&amp;amp;C for this, since it seems to be tracking usage in my initial run of the import cell, but the message disappeared when I re-ran it, but I'm not too concerned on this yet since this is just experimentation.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;So let's push a little and see what the limits of this integration can do. I was looking for a WYSIWYG Rich Text Editor to embed in an app, and I came across &lt;a href=&quot;https://github.com/quilljs/quill/&quot;&gt;Quill&lt;/a&gt;. I don't want to invest too much time in getting an app running to see what it does, so let's see if we can embed the &lt;a href=&quot;https://quilljs.com/docs/quickstart/&quot;&gt;Quill getting started sample code&lt;/a&gt; here for a quick experiment with it. I keep forgetting to put &lt;code&gt;%%node&lt;/code&gt; at the top of the code cell to run Javascript syntax so hopefully this note here fixes that.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;node&lt;/span&gt;
// Remember to use javascript syntax from here forth
var htmlString= `
&amp;lt;!-- Include Quill stylesheet --&amp;gt;
&amp;lt;link href=&amp;quot;https://cdn.quilljs.com/1.0.0/quill.snow.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;

&amp;lt;!-- Create the toolbar container --&amp;gt;
&amp;lt;div id=&amp;quot;toolbar&amp;quot;&amp;gt;
  &amp;lt;button class=&amp;quot;ql-bold&amp;quot;&amp;gt;Bold&amp;lt;/button&amp;gt;
  &amp;lt;button class=&amp;quot;ql-italic&amp;quot;&amp;gt;Italic&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;!-- Create the editor container --&amp;gt;
&amp;lt;div id=&amp;quot;editor&amp;quot;&amp;gt;
  &amp;lt;p&amp;gt;Hello World!&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;!-- Include the Quill library --&amp;gt;
&amp;lt;script src=&amp;quot;https://cdn.quilljs.com/1.0.0/quill.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;!-- Initialize Quill editor --&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
  var editor = new Quill(&amp;#39;#editor&amp;#39;, {
    modules: { toolbar: &amp;#39;#toolbar&amp;#39; },
    theme: &amp;#39;snow&amp;#39;
  });
&amp;lt;/script&amp;gt;
`
// console.log(htmlString)
html(htmlString)
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_html rendered_html output_subarea &quot;&gt;

&lt;!-- Include Quill stylesheet --&gt;
&lt;link href=&quot;https://cdn.quilljs.com/1.0.0/quill.snow.css&quot; rel=&quot;stylesheet&quot; /&gt;

&lt;!-- Create the toolbar container --&gt;
&lt;div id=&quot;toolbar&quot;&gt;
  &lt;button class=&quot;ql-bold&quot;&gt;Bold&lt;/button&gt;
  &lt;button class=&quot;ql-italic&quot;&gt;Italic&lt;/button&gt;
&lt;/div&gt;

&lt;!-- Create the editor container --&gt;
&lt;div id=&quot;editor&quot;&gt;
  &lt;p&gt;Hello World!&lt;/p&gt;
&lt;/div&gt;

&lt;!-- Include the Quill library --&gt;
&lt;script src=&quot;https://cdn.quilljs.com/1.0.0/quill.js&quot;&gt;&lt;/script&gt;

&lt;!-- Initialize Quill editor --&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
  var editor = new Quill('#editor', {
    modules: { toolbar: '#toolbar' },
    theme: 'snow'
  });
&lt;/script&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Damn, maybe a bit too ambitious a start to think it could do this. Maybe it's the call to the external JS and Stylesheets. I'll have to investigate the why of this later. Let me just start with just the simple HTML part of that code and see if this (as uninteresting as it is) will run without error.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;node&lt;/span&gt;
var str = `
&amp;lt;!-- Create the editor container --&amp;gt;
&amp;lt;div id=&amp;quot;editor&amp;quot;&amp;gt;  
  &amp;lt;p&amp;gt;Hello World!&amp;lt;/p&amp;gt; 
  &amp;lt;p&amp;gt;Some initial &amp;lt;strong&amp;gt;bold&amp;lt;/strong&amp;gt; text&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
`
html(str)
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;... ... ... ... ... ... ...
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_html rendered_html output_subarea &quot;&gt;

&lt;!-- Create the editor container --&gt;
&lt;div id=&quot;editor&quot;&gt;  
  &lt;p&gt;Hello World!&lt;/p&gt; 
  &lt;p&gt;Some initial &lt;strong&gt;bold&lt;/strong&gt; text&lt;/p&gt;
  &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Nothing spectacular, but it is respecting HTML tags so that's something to note, let's move on. The documentation for &lt;code&gt;pixiedust_node&lt;/code&gt; says I can see what npm packages are available and I can also install &lt;code&gt;npm&lt;/code&gt; packages. Let's take a look what I have, and then try to install another WYSIWYG editor I noted called &lt;a href=&quot;https://github.com/froala/wysiwyg-editor-node-sdk&quot;&gt;Froala&lt;/a&gt; and see if we fare better here.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;node&lt;/span&gt;
npm.list()
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Uncaught
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;node&lt;/span&gt;
npm.install(&amp;#39;froala-editor&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Uncaught
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Ok. So not getting the messages or ease of use I was expecting. Maybe it's my inexperience with the environment, but I was hoping for better. The pixiedust and pixiedust node combination have some merits, but aren't quite as glamorous as I hoped they'd be. Let's do some searching and try another approach. If I come back to doing more here and update the notebook I'll add a note cell here so the blog post reflects that anything from here is new stuff I added since first published&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Alternative-approach:-ReactJS-code-sample-found-in-a-Github-gist&quot;&gt;Alternative approach: ReactJS code sample found in a Github gist&lt;a class=&quot;anchor-link&quot; href=&quot;#Alternative-approach:-ReactJS-code-sample-found-in-a-Github-gist&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;I found a &lt;a href=&quot;https://gist.github.com/jeremyschlatter/c35c6bfa568e5a40440cb2fefcc7fd4e&quot;&gt;public gist on Github&lt;/a&gt; that showed a notebook proporting to run ReactJS code. Let's give it a try, the code may be copied verbatim since I'm not sure yet what it's doing so don't want to break it apart yet, although I might do this in a future review of this.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IPython.display&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Javascript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IPython.core.magic&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;register_cell_magic&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Javascript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;// Load our libraries from a CDN instead of wherever this notebook is hosted.&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;require.config({&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    paths: {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        babel: &amp;#39;https://unpkg.com/babel-standalone@6/babel.min&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        react: &amp;#39;https://unpkg.com/react@15.3.1/dist/react&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        &amp;#39;react-dom&amp;#39;: &amp;#39;https://unpkg.com/react-dom@15.3.1/dist/react-dom&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;s1&quot;&gt;// Hook to call into Python.&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;// Credit to disarticulate for documenting the usage of iopub: &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;//    https://gist.github.com/disarticulate/d06069ff3e71cf828e5329beab8cb084&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;window.python = code =&amp;gt; new Promise((resolve, reject) =&amp;gt; {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    IPython.notebook.kernel.execute(&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        code,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        {iopub: {output: data =&amp;gt; resolve(data.content.text)}},&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    )   &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;


&lt;span class=&quot;nd&quot;&gt;@register_cell_magic&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;jsx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Javascript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        require([&amp;#39;babel&amp;#39;, &amp;#39;react&amp;#39;, &amp;#39;react-dom&amp;#39;], (Babel, React, ReactDOM) =&amp;gt; {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;            eval(Babel.transform($quoted_script, {presets: [&amp;#39;react&amp;#39;]}).code)&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        })&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;substitute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quoted_script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;




&lt;div id=&quot;4d421a3a-8df8-4e61-8849-298cecb22d6e&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;output_subarea output_javascript &quot;&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
var element = $('#4d421a3a-8df8-4e61-8849-298cecb22d6e');

// Load our libraries from a CDN instead of wherever this notebook is hosted.
require.config({
    paths: {
        babel: 'https://unpkg.com/babel-standalone@6/babel.min',
        react: 'https://unpkg.com/react@15.3.1/dist/react',
        'react-dom': 'https://unpkg.com/react-dom@15.3.1/dist/react-dom'
    }
})

// Hook to call into Python.
// Credit to disarticulate for documenting the usage of iopub: 
//    https://gist.github.com/disarticulate/d06069ff3e71cf828e5329beab8cb084
window.python = code =&gt; new Promise((resolve, reject) =&gt; {
    IPython.notebook.kernel.execute(
        code,
        {iopub: {output: data =&gt; resolve(data.content.text)}},
    )   
})

&lt;/script&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;So the first time I ran the above cell I got no errors, but the 2nd time it generated a heap of them. I'm not sure if this is an after-effect of the failed previous experiment, but let's press on and hope the right bits got compiled as needed. The gist basically says I can set a python variable and then have the JSX declared later use this variable in what it displays. Let's give this a go using their sample&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hello from Python and React!&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%%js&lt;/span&gt;x
&lt;span class=&quot;nx&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;print(greeting)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ReactDOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h1&amp;gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;




&lt;div id=&quot;55e35c47-976b-4dd6-a61b-7747d095da57&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;output_subarea output_javascript &quot;&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
var element = $('#55e35c47-976b-4dd6-a61b-7747d095da57');

        require(['babel', 'react', 'react-dom'], (Babel, React, ReactDOM) =&gt; {
            eval(Babel.transform(&quot;python('print(greeting)').then(greeting =&gt; {\n    ReactDOM.render(\n      &lt;h1&gt;{greeting}&lt;/h1&gt;,\n      element[0],\n    )\n})\n&quot;, {presets: ['react']}).code)
        })
    
&lt;/script&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Ok it was pretty sweet that the first time I ran the code it rendered, but subsequent running spit out the gob of errors you see above. I wonder if it will work with a more complex bit of code though. I'll have to dig further and update this post in future with what I find here. There seem to be a few more approaches I can try, and even a few &lt;a href=&quot;https://github.com/jupyter/jupyter/wiki/Jupyter-kernels&quot;&gt;Javascript kernels for Jupyter&lt;/a&gt; online to experiment with.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;blockquote&gt;&lt;p&gt;Experiment status:&lt;strong&gt;In progress&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Nissan Dookeran</name></author><summary type="html"></summary></entry><entry><title type="html">Practice using the Lesson 1 notebook</title><link href="https://nissan.github.io/learn-deeplearning-blog/fastai/course_v4/2020/03/31/Practice-On-Lessons-From-Lesson-1.html" rel="alternate" type="text/html" title="Practice using the Lesson 1 notebook" /><published>2020-03-31T00:00:00-05:00</published><updated>2020-03-31T00:00:00-05:00</updated><id>https://nissan.github.io/learn-deeplearning-blog/fastai/course_v4/2020/03/31/Practice-On-Lessons-From-Lesson-1</id><content type="html" xml:base="https://nissan.github.io/learn-deeplearning-blog/fastai/course_v4/2020/03/31/Practice-On-Lessons-From-Lesson-1.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-03-31-Practice-On-Lessons-From-Lesson-1.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;From &lt;a href=&quot;https://github.com/fastai/fastbook/blob/master/01_intro.ipynb&quot;&gt;Lesson 1 of fastbook&lt;/a&gt; as the basis for &lt;a href=&quot;https://github.com/fastai/course-v4/blob/master/nbs/01_intro.ipynb&quot;&gt;Lesson 1 of the V4 course&lt;/a&gt; currently being run we're using copies of the notebook code embedded in their new book. So below are my experiments from what I learnt here, starting from scratch but drawing heavily from their textbook code. I run this locally on Windows 10 (I can see Jeremy's eye rolling if he reads this since he recommended against this for beginners) but in my defense I did do the course last year and had my laptop configured with V1 of Fastai running so thought I'd see where the stress points were, but to keep productive I also run on Google Collab which is honestly much easier. As a caveat, I'm writing this article while running Jupyter Notebook on the Windows 10 environment so if some code looks slightly modified I'll try to mention explicitly this is a Win10 specific change. Now, on to the experimentation.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;First if you're running this locally make sure you have the &quot;Trusted&quot; button enable for this notebook.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Now we're going to make sure fastai is installed into my local environment&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fastai2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Requirement already satisfied: fastai2 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (0.0.13)
Requirement already satisfied: requests in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from fastai2) (2.23.0)
Requirement already satisfied: pyyaml in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from fastai2) (5.3)
Requirement already satisfied: spacy in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from fastai2) (2.1.8)
Requirement already satisfied: pillow in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from fastai2) (7.0.0)
Requirement already satisfied: fastcore in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from fastai2) (0.1.15)
Requirement already satisfied: matplotlib in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from fastai2) (3.1.3)
Requirement already satisfied: fastprogress&amp;gt;=0.1.22 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from fastai2) (0.2.2)
Requirement already satisfied: scipy in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from fastai2) (1.4.1)
Requirement already satisfied: torch&amp;gt;=1.3.0 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from fastai2) (1.4.0)
Requirement already satisfied: pandas in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from fastai2) (1.0.2)
Requirement already satisfied: torchvision&amp;gt;=0.5 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from fastai2) (0.5.0)
Requirement already satisfied: scikit-learn in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from fastai2) (0.22.2.post1)
Requirement already satisfied: certifi&amp;gt;=2017.4.17 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from requests-&amp;gt;fastai2) (2019.11.28)
Requirement already satisfied: chardet&amp;lt;4,&amp;gt;=3.0.2 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from requests-&amp;gt;fastai2) (3.0.4)
Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,&amp;lt;1.26,&amp;gt;=1.21.1 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from requests-&amp;gt;fastai2) (1.25.8)
Requirement already satisfied: idna&amp;lt;3,&amp;gt;=2.5 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from requests-&amp;gt;fastai2) (2.9)
Requirement already satisfied: srsly&amp;lt;1.1.0,&amp;gt;=0.0.6 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from spacy-&amp;gt;fastai2) (0.1.0)
Requirement already satisfied: preshed&amp;lt;2.1.0,&amp;gt;=2.0.1 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from spacy-&amp;gt;fastai2) (2.0.1)
Requirement already satisfied: blis&amp;lt;0.3.0,&amp;gt;=0.2.2 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from spacy-&amp;gt;fastai2) (0.2.4)
Requirement already satisfied: thinc&amp;lt;7.1.0,&amp;gt;=7.0.8 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from spacy-&amp;gt;fastai2) (7.0.8)
Requirement already satisfied: plac&amp;lt;1.0.0,&amp;gt;=0.9.6 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from spacy-&amp;gt;fastai2) (0.9.6)
Requirement already satisfied: cymem&amp;lt;2.1.0,&amp;gt;=2.0.2 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from spacy-&amp;gt;fastai2) (2.0.2)
Requirement already satisfied: numpy&amp;gt;=1.15.0 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from spacy-&amp;gt;fastai2) (1.18.1)
Requirement already satisfied: wasabi&amp;lt;1.1.0,&amp;gt;=0.2.0 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from spacy-&amp;gt;fastai2) (0.2.2)
Requirement already satisfied: murmurhash&amp;lt;1.1.0,&amp;gt;=0.28.0 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from spacy-&amp;gt;fastai2) (1.0.2)
Requirement already satisfied: kiwisolver&amp;gt;=1.0.1 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from matplotlib-&amp;gt;fastai2) (1.1.0)
Requirement already satisfied: python-dateutil&amp;gt;=2.1 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from matplotlib-&amp;gt;fastai2) (2.8.1)
Requirement already satisfied: cycler&amp;gt;=0.10 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from matplotlib-&amp;gt;fastai2) (0.10.0)
Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,&amp;gt;=2.0.1 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from matplotlib-&amp;gt;fastai2) (2.4.6)
Requirement already satisfied: pytz&amp;gt;=2017.2 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from pandas-&amp;gt;fastai2) (2019.3)
Requirement already satisfied: six in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from torchvision&amp;gt;=0.5-&amp;gt;fastai2) (1.14.0)
Requirement already satisfied: joblib&amp;gt;=0.11 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from scikit-learn-&amp;gt;fastai2) (0.14.1)
Requirement already satisfied: tqdm&amp;lt;5.0.0,&amp;gt;=4.10.0 in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from thinc&amp;lt;7.1.0,&amp;gt;=7.0.8-&amp;gt;spacy-&amp;gt;fastai2) (4.43.0)
Requirement already satisfied: setuptools in c:\tools\anaconda3\envs\fastai2\lib\site-packages (from kiwisolver&amp;gt;=1.0.1-&amp;gt;matplotlib-&amp;gt;fastai2) (46.0.0.post20200309)
Note: you may need to restart the kernel to use updated packages.
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Now in the notebook and the V4 course repo, Jeremy hides alot of the guts of getting things up and running with&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;utils&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#this will crash if you run it outside the folder since `utils.py` is in the root folder of the notebooks&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_text output_error&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;ansi-red-intense-fg ansi-bold&quot;&gt;---------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;ansi-red-intense-fg ansi-bold&quot;&gt;ModuleNotFoundError&lt;/span&gt;                       Traceback (most recent call last)
&lt;span class=&quot;ansi-green-intense-fg ansi-bold&quot;&gt;&amp;lt;ipython-input-6-f8223ec046d9&amp;gt;&lt;/span&gt; in &lt;span class=&quot;ansi-cyan-fg&quot;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ansi-green-intense-fg ansi-bold&quot;&gt;----&amp;gt; 1&lt;/span&gt;&lt;span class=&quot;ansi-yellow-intense-fg ansi-bold&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ansi-green-intense-fg ansi-bold&quot;&gt;from&lt;/span&gt; utils &lt;span class=&quot;ansi-green-intense-fg ansi-bold&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;ansi-yellow-intense-fg ansi-bold&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;ansi-red-intense-fg ansi-bold&quot;&gt;#this will crash if you run it outside the folder since `utils.py` is in the root folder of the notebooks&lt;/span&gt;

&lt;span class=&quot;ansi-red-intense-fg ansi-bold&quot;&gt;ModuleNotFoundError&lt;/span&gt;: No module named &amp;#39;utils&amp;#39;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;But since I like to dig into things I'm going to try to parse the &lt;code&gt;utils.py&lt;/code&gt; file and pull out just the pieces we need to get Lesson 1 stuff up and running&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;fastai2.vision.all&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;I also want to test my environment to make sure I have a Nvidia GPU and probe for some details on it&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cuda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;&amp;lt;torch.cuda.device at 0x2b2f58b1c48&amp;gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cuda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_device_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;&amp;#39;Quadro P2000&amp;#39;&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cuda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;True&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backends&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cudnn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;True&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch.cuda&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cuda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;PyTorch found cuda&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;PyTorch could not find cuda&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;PyTorch found cuda
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;There's a block of code in the notebook that executes a learner on images data of both cats and dogs and their breeds. I'm segmenting that code below and putting notes on each&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;First he gets the data from the built in &lt;code&gt;URLS&lt;/code&gt; object for &lt;code&gt;PETS&lt;/code&gt; data which is a simple Amazon S3 storage bucket location containing what looks like either the originally or slightly modified copy of &lt;a href=&quot;https://www.robots.ox.ac.uk/~vgg/data/pets/&quot;&gt;The Oxford-IIIT Pet Dataset&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PETS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;https://s3.amazonaws.com/fast-ai-imageclas/oxford-iiit-pet.tgz
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;So we use a method &lt;code&gt;untar_data&lt;/code&gt; to decompress this into our local &lt;code&gt;images&lt;/code&gt; folder. In the next block if you uncomment the code and press &lt;code&gt;Shift-Tab&lt;/code&gt; 3 (or 4 times for a pop out window) you can see the documentation on the function and the parameters it takes&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;untar_data&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#Press `Enter` to see some info or use `Shift+Tab` 3 or 4 times to see more formatted documentation&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;&amp;lt;function fastai2.data.external.untar_data(url, fname=None, dest=None, c_key=&amp;#39;data&amp;#39;, force_download=False, extract_func=&amp;lt;function file_extract at 0x000002B2F4592948&amp;gt;)&amp;gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;untar_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PETS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;images&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;So this had me scratching for awhile when I read the notebook but then in the video Jeremy explained the need for this function. Apparently because it is a mixture of both cats and dogs and their breeds, the way to identify data as being for a cat is to Capitalize The First Letter For Any Cat Breed. So the function below would be reused when classifying data as a Cat before going deeper into identifying its breed.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is_cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isupper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The &lt;code&gt;ImageDataLoaders&lt;/code&gt; function is handy as it has a variety of extensions to make loading from various image sources much easier. FastAI has this concept of a &lt;code&gt;DataLoader&lt;/code&gt; that holds the data we're going to train and validate our model on. Because I'm running this on Windows 10, I had to add an additional parameter of &lt;code&gt;num_workers=0&lt;/code&gt; to the call to make sure it doesn't crash. For Linux users, you can safely remove this call.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ImageDataLoaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#press Tab once to see all possible calls&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_text output_error&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;ansi-red-intense-fg ansi-bold&quot;&gt;---------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;ansi-red-intense-fg ansi-bold&quot;&gt;AttributeError&lt;/span&gt;                            Traceback (most recent call last)
&lt;span class=&quot;ansi-green-intense-fg ansi-bold&quot;&gt;&amp;lt;ipython-input-17-4e80285fe0f4&amp;gt;&lt;/span&gt; in &lt;span class=&quot;ansi-cyan-fg&quot;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ansi-green-intense-fg ansi-bold&quot;&gt;----&amp;gt; 1&lt;/span&gt;&lt;span class=&quot;ansi-yellow-intense-fg ansi-bold&quot;&gt; &lt;/span&gt;ImageDataLoaders&lt;span class=&quot;ansi-yellow-intense-fg ansi-bold&quot;&gt;.&lt;/span&gt;from_ &lt;span class=&quot;ansi-red-intense-fg ansi-bold&quot;&gt;#press Tab once to see all possible calls&lt;/span&gt;

&lt;span class=&quot;ansi-red-intense-fg ansi-bold&quot;&gt;AttributeError&lt;/span&gt;: type object &amp;#39;ImageDataLoaders&amp;#39; has no attribute &amp;#39;from_&amp;#39;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ImageDataLoaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_name_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_image_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valid_pct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;label_func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item_tfms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Resize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;224&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_workers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;So now we're going to call the learner that will train the model to recognise the various cats and dogs breeds in our model using the &lt;a href=&quot;https://arxiv.org/abs/1512.03385&quot;&gt;ResNet34&lt;/a&gt; pre-trained model. A pre-trained model is a very cool concept. Normally to start training a series of weights are chosen at random and over time are changed to better match a specific set of data. These weights are re-usable since basically it lets us jumpstart training a new, related dataset as these pre-trained series of weights are a better starting point than &quot;random&quot; for the new more niche subset of related data. Here we also specifiy the metric we're using as a measure of accuracy, fastai defines one for us that's useful, appropriately called &lt;code&gt;error_rate&lt;/code&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error_rate&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Press Shift+Tab 3 times to see the documentation on this&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;&amp;lt;function fastai2.metrics.error_rate(inp, targ, axis=-1)&amp;gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;learn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnn_learner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resnet34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;metrics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error_rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Fast.ai V2 also introduced this nice method called &lt;code&gt;fine_tune&lt;/code&gt; which basially runs a cycle of training again using a learning rate it has pre-determined as best for training to &quot;fine tune&quot; the model to produce better accuracy. I won't propose to understand it fully yet, but from what I know it freezes a fixed number of the hidden layers of the pre-trained model, and unfreezes the last few layers so their weights can be changed to better match the niche dataset. The logic is sound as the first set of layers would already be really good at recognising general features common in all images of the superset, but the last few layers can now be fine tuned to match the explicit features in the specific classifications of the niche dataset we are presenting for training in this model. As I learn I may write more about how I understand this function to work and append this post to match what I learn. Note, this step might take some time to execute depending on the speed and memory of the GPU you have running. Google Collab would take about 5 minutes. My local laptop running Windows 10 takes a little longer.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;learn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fine_tune&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_html rendered_html output_subarea &quot;&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: left;&quot;&gt;
      &lt;th&gt;epoch&lt;/th&gt;
      &lt;th&gt;train_loss&lt;/th&gt;
      &lt;th&gt;valid_loss&lt;/th&gt;
      &lt;th&gt;error_rate&lt;/th&gt;
      &lt;th&gt;time&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.167801&lt;/td&gt;
      &lt;td&gt;0.024875&lt;/td&gt;
      &lt;td&gt;0.007442&lt;/td&gt;
      &lt;td&gt;07:17&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_html rendered_html output_subarea &quot;&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: left;&quot;&gt;
      &lt;th&gt;epoch&lt;/th&gt;
      &lt;th&gt;train_loss&lt;/th&gt;
      &lt;th&gt;valid_loss&lt;/th&gt;
      &lt;th&gt;error_rate&lt;/th&gt;
      &lt;th&gt;time&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.052814&lt;/td&gt;
      &lt;td&gt;0.014244&lt;/td&gt;
      &lt;td&gt;0.006089&lt;/td&gt;
      &lt;td&gt;05:19&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;So now we have a trained model that looks like it has a pretty low error rate and we want to test it with something it hasn't seen before. This library in the next code block was added early in V3 of the course and is more prominent in V4 and lets you put GUI elements you're used to in a normal application (like a file uploader) into the notebook. I did a quick web search for a cat, downloaded that file and used it here to test.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ipywidgets&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;widgets&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;uploader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;widgets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FileUpload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;uploader&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The next block of code simply looks at the image we loaded, passes it to our model for an evaluation of whether or not it thinks it's a cat. I'd recommend having both a dog and a cat image available to test on your own&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PILImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uploader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;is_cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;probs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;learn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Is this a cat?: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_cat&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Probability it&amp;#39;s a cat: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;probs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.6f&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_html rendered_html output_subarea &quot;&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Is this a cat?: True.
Probability it&amp;#39;s a cat: 1.000000
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;And there you go. That simple. You're now a deep learning practitioner like me so celebrate the accomplishment. 
Hopefully you feel less like this:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;
&lt;center&gt;
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ygFoN3hKi20&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/center&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;And more like this:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;
&lt;center&gt;
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/535Zy_rf4NU&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/center&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Notes-from-first-few-minutes-Jeremy's-Lesson-2-lecture&quot;&gt;Notes from first few minutes Jeremy's Lesson 2 lecture&lt;a class=&quot;anchor-link&quot; href=&quot;#Notes-from-first-few-minutes-Jeremy's-Lesson-2-lecture&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Jeremy continued to cover the Chapter 1 notebook from Fastbook in Lesson 2. Appending the notes here to keep them naturally aligned to the Fastbook content for when I get my copy (or you yours) to be able to map it all back more easily&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;First bring back the code we're taking a look at
&lt;div class=&quot;flash flash-success&quot;&gt;
    &lt;svg class=&quot;octicon octicon-checklist&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M16 8.5l-6 6-3-3L8.5 10l1.5 1.5L14.5 7 16 8.5zM5.7 12.2l.8.8H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h7c.55 0 1 .45 1 1v6.5l-.8-.8c-.39-.39-1.03-.39-1.42 0L5.7 10.8a.996.996 0 000 1.41v-.01zM4 4h5V3H4v1zm0 2h5V5H4v1zm0 2h3V7H4v1zM3 9H2v1h1V9zm0-2H2v1h1V7zm0-2H2v1h1V5zm0-2H2v1h1V3z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;strong&gt;Tip: &lt;/strong&gt;- Use the &lt;a href=&quot;https://github.com/fastai/fastbook&quot;&gt;fastbook book git repository&lt;/a&gt; as well as the 
&lt;/div&gt;&lt;a href=&quot;https://github.com/fastai/course-v4&quot;&gt;course-v4 repository&lt;/a&gt; for reference. The &lt;em&gt;fastbook&lt;/em&gt; repo should be used as reading material while the &lt;em&gt;course-v4&lt;/em&gt; repo can be used to just see the sample code and experiment to ensure you're understanding the material&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;fastai2.vision.all&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#since I don&amp;#39;t have utils.py here, will just pull the lines from it we need&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;untar_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PETS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;images&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is_cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isupper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Now, let's take a look at the bit he's exploring for the notes below&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ImageDataLoaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_name_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_image_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valid_pct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;label_func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item_tfms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Resize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;224&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_workers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#num_workers=0 is needed for Windows only&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;ul&gt;
&lt;li&gt;First thing to note, is we have a labelling function &lt;code&gt;label_func&lt;/code&gt;, in this case &lt;code&gt;is_cat(x)&lt;/code&gt; which all it does is check the first letter of the file name, because the files are labelled in such a way that an UPPERCASE first letter in the file name indicates it is a cat breed.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;ul&gt;
&lt;li&gt;This example code allows us to predict a category, i.e. the label is a category. In this case, our model is a &lt;em&gt;classification model&lt;/em&gt;&lt;blockquote&gt;&lt;p&gt;If we're trying to predict a variable number, like an age, or location then this is a &lt;em&gt;regression model&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;ul&gt;
&lt;li&gt;What &lt;code&gt;valid_pct=0.2&lt;/code&gt; does in the sample code given is puts aside 20% of the data in training to test the model to see how accurate the model is. This is called a &lt;em&gt;validation set&lt;/em&gt; and is useful in detecting &lt;em&gt;overfitting&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Overfitting happens when you train the model for too long, or with too little data or with too many parameters, the accuracy of the model starts to go down, since it measures predictions on the validation set and when this value starts to go down, this is a sign of overfitting. &lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;ul&gt;
&lt;li&gt;Looking at &lt;code&gt;cnn_learner(dls, resnet34, metrics=error_rate)&lt;/code&gt;. This is a &lt;em&gt;learner&lt;/em&gt;, which contains your data (&lt;code&gt;dls&lt;/code&gt;), a function (&lt;code&gt;resnet34&lt;/code&gt;) which we are optimising for our data, and a list of functions (&lt;code&gt;metrics=error_rate&lt;/code&gt;) you want executed and printed out after running each &lt;em&gt;epoch&lt;/em&gt;. It figures out what are the &lt;em&gt;parameters&lt;/em&gt; that best cause the function &lt;code&gt;resnet34&lt;/code&gt; to best match the labels in our data in &lt;code&gt;dls&lt;/code&gt;.&lt;ul&gt;
&lt;li&gt;learner&lt;/li&gt;
&lt;li&gt;parameters&lt;/li&gt;
&lt;li&gt;epoch - when you look at every image in the training set once.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resnet34&lt;/code&gt; is a particular &lt;em&gt;architecture&lt;/em&gt; &lt;a href=&quot;https://towardsdatascience.com/an-overview-of-resnet-and-its-variants-5281e2f56035&quot;&gt;Resnet&lt;/a&gt; that has been shown to be very good at computer vision problems. 34 in &lt;code&gt;resnet34&lt;/code&gt; indicates how many layers there are. The higher numbered versions (resnet50 etc) take more parameters, use more memory, take longer to train, are more likely to overfit but can also create more complex models&lt;/li&gt;
&lt;li&gt;architecture&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;code&gt;metrics&lt;/code&gt; is a function that measures the quality of the predictions using our &lt;em&gt;validation set&lt;/em&gt;.
&lt;code&gt;error_rate&lt;/code&gt; prints out what percent of the training dataset are being incorrectly classified by the model. &lt;code&gt;accuracy&lt;/code&gt; is another metric and is calculated as (1 - &lt;em&gt;error_rate&lt;/em&gt;)&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;There is potentially a difference between the &lt;em&gt;metric&lt;/em&gt; and the &lt;em&gt;loss&lt;/em&gt;, but they are closely related. Attribution to &lt;a href=&quot;https://en.wikipedia.org/wiki/Arthur_Samuel&quot;&gt;Arthur Samuel&lt;/a&gt;'s insight here.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We need a way to measure how well our model is doing so when we change the &lt;em&gt;parameters&lt;/em&gt; we cna figure out which set of parameters make that performance measurement get better or worse. The &lt;em&gt;loss&lt;/em&gt; is that performance measurement.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Error rate&lt;/em&gt; and &lt;em&gt;accuracy&lt;/em&gt; do not indicate if we are getting better or worse if we change our &lt;em&gt;parameters&lt;/em&gt; just a little bit, since we may overall be predicting exactly the same number of items correctly, so these are not measures of &lt;em&gt;loss&lt;/em&gt; since potentially we could be not predicting as well on the data in the validation set once the parameters are changed, but still well enough to give the labelled output value as the prediction.
You generally care most about the metrics, but the program cares about the loss, since this tells it how to update the parameters when running the model against the training data in the next &lt;em&gt;epoch&lt;/em&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;ul&gt;
&lt;li&gt;We care about how well the model predicts not just with the data we're training with, but with data it has never seen before.&lt;/li&gt;
&lt;li&gt;While we can &lt;em&gt;cheat&lt;/em&gt; by developing a model that generates great metrics for our validation set, we can set aside a 3rd set of data, a &lt;em&gt;test set&lt;/em&gt; that isn't used in either training or generating validation metrics for the model, but only used when the entire project is completed.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Jeremy starts going into fine-tuning, transfer learning, and how using AlexNet example what makes sense intuitively is proven.
Parameters vs hyper-parameters. TODO is add notes from here as I go over again this material.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Nissan Dookeran</name></author><summary type="html"></summary></entry></feed>